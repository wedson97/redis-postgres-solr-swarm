version: "3.9"

services:
  flask-app:
    image: python:3.9-slim
    container_name: flask-app-container
    networks:
      - global
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      sh -c "pip install -r requirements.txt && flask run --host=0.0.0.0 --port=5000"
    ports:
      - "5000:5000"
    deploy:
      replicas: 4  # Ajustado para 2 instâncias, dependendo da carga da sua aplicação
      resources:
        limits:
          cpus: "1"  # 1 CPU é adequado para Flask
          memory: 1G  # 1 GB de memória
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:latest
    container_name: postgres_container
    networks:
      - global
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: cbo_ocupacao
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    deploy:
      replicas: 1  # Apenas uma réplica para o banco
      resources:
        limits:
          cpus: "1"  # 1 CPU deve ser suficiente para o PostgreSQL
          memory: 2G  # 2 GB de memória para o banco
      restart_policy:
        condition: on-failure

  redis:
    image: redis:latest
    container_name: redis-container
    networks:
      - global
    ports:
      - "6379:6379"
    deploy:
      replicas: 1  # Uma réplica para o Redis
      resources:
        limits:
          cpus: "0.5"  # Redis não requer muita CPU
          memory: 1G  # 1 GB de memória para o Redis
      restart_policy:
        condition: on-failure

  solr:
    image: solr:latest
    container_name: solr-container
    networks:
      - global
    ports:
      - "8983:8983"
    deploy:
      replicas: 1  # Uma réplica para Solr
      resources:
        limits:
          cpus: "1"  # 1 CPU deve ser suficiente para Solr
          memory: 2G  # 2 GB de memória para Solr
      restart_policy:
        condition: on-failure

networks:
  global:
    driver: overlay
