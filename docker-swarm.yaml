version: '3.8'

services:
  app_flask:
    image: python:3.9-slim
    deploy:
      mode: replicated
      replicas: 4  # Agora permite rodar 4 réplicas sem restrição
    ports:
      - "5000:5000"
    networks:
      - app_network
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
    volumes:
      - ./app:/app
    command: >
      sh -c "pip install -r /app/requirements.txt && python /app/app.py"

  app_postgres:
    image: postgres:latest
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  app_redis:
    image: redis:latest
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - redis_data:/data
    networks:
      - app_network

  app_solr:
    image: solr:latest
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - SOLR_HOME=/var/solr
      - SOLR_OPTS="-Dsolr.allowUnsafeComponents=true"
    volumes:
      - solr_data:/var/solr
    networks:
      - app_network
    ports:
      - "8983:8983"
    command:
      - solr-precreate
      - mycollection

  app_traefik:
    image: traefik:v2.9
    deploy:
      mode: global
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - app_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  app_network:
    driver: overlay

volumes:
  postgres_data:
  redis_data:
  solr_data:
